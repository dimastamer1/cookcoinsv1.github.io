import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import "./style.scss";

const Notes = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const [promoCode, setPromoCode] = useState("");
  const [message, setMessage] = useState("");
  const [bonusGiven, setBonusGiven] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –±—ã–ª –ª–∏ –±–æ–Ω—É—Å –≤—ã–¥–∞–Ω

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∏–∑ Redux —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const totalCoins = useSelector((state) => state.totalCoins);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–ª–∞
  const formatNumber = (num) => {
    if (num >= 1000000000) {
      return (num / 1000000000).toFixed(1) + 'B'; // –º–∏–ª–ª–∏–∞—Ä–¥—ã
    } else if (num >= 1000000) {
      return (num / 1000000).toFixed(1) + 'M'; // –º–∏–ª–ª–∏–æ–Ω—ã
    } else if (num >= 1000) {
      return (num / 1000).toFixed(1) + 'K'; // —Ç—ã—Å—è—á–∏
    } else {
      return num; // –º–µ–Ω–µ–µ 1000
    }
  };

  const handlePromoCodeChange = (e) => {
    setPromoCode(e.target.value);
  };

  const handlePromoCodeSubmit = (e) => {
    e.preventDefault();
    if (promoCode === "CAS") {
      dispatch({ type: "APPLY_PROMOCODE", payload: promoCode });
      setMessage("+10,000 totalCoins.");
    } else {
      setMessage("Promo code invalid");
    }
    setPromoCode(""); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
  };

  useEffect(() => {
    if (message) {
      const timer = setTimeout(() => {
        setMessage("");
      }, 2000); // –û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã

      // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      return () => clearTimeout(timer);
    }
  }, [message]);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ —É–∂–µ –≤—ã–¥–∞–Ω –±–æ–Ω—É—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    const bonusStatus = localStorage.getItem('bonusGiven');
    setBonusGiven(bonusStatus === 'true');
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ
  const handleNavigateToExternalLink = () => {
    if (!bonusGiven) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –≤—ã–¥–∞–Ω –±–æ–Ω—É—Å
      window.location.href = "https://t.me/nft_cookie";

      setTimeout(() => {
        dispatch({ type: "ADD_BONUS", payload: 50000 }); // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ 50,000
        localStorage.setItem('bonusGiven', 'true'); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, —á—Ç–æ –±–æ–Ω—É—Å –≤—ã–¥–∞–Ω
        setBonusGiven(true); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      }, 3000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π –±–æ–Ω—É—Å–∞
    } else {
      window.location.href = "https://t.me/nft_cookie"; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑ –≤—ã–¥–∞—á–∏ –±–æ–Ω—É—Å–∞
    }
  };

  return (
    <div className="background-container">
      <div className="notes-container">
        <div className="notes-header">
          <img
            src="https://i.ibb.co/xYvth3F/photo-2024-08-05-18-50-15.jpg"
            alt="Header Image"
            className="header-image"
          />
        </div>

        <button className="navigate__home__btn" onClick={() => navigate("/")}>
          GO BACK {"<"}
        </button>
        <div className="promo-code-container">
          <h1> </h1>
          <form className="promo-code-form" onSubmit={handlePromoCodeSubmit}>
            <input
              type="text"
              value={promoCode}
              onChange={handlePromoCodeChange}
              placeholder="You Promo Code"
              required
            />
            <button type="submit">ACTIVATION</button>
          </form>
          {message && <p className="promo-code-message">{message}</p>}
        </div>

        {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ */}
        <div className="balance-info">
          <h2>You Coins Balance</h2>
          <p className="balance-coin">
            {formatNumber(totalCoins)}
          </p>
        </div>{/* –ö–Ω–æ–ø–∫–∞ "–ó–∞–¥–∞–Ω–∏—è" */}
        <button 
          className="navigate__quests__btn" 
          onClick={handleNavigateToExternalLink}
          disabled={bonusGiven} // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –±–æ–Ω—É—Å —É–∂–µ –≤—ã–¥–∞–Ω
        >
          <div className="rewards-info">
            {bonusGiven ? (
              <span className="reward-text">Bonus Claimed</span>
            ) : (
              <>
                <span className="reward-cookies">+5000 üç™</span>
                <span className="reward-batteries">+500 üîã</span>
              </>
            )}
          </div>
          {bonusGiven ? "Bonus Claimed" : "Subscribe Channel"}
        </button>

        <div className="tasks-text">
          <span className="tasks-textt"> tasks</span>
        </div>
      </div>
    </div>
  );
};

export default Notes;